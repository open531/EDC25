using System.Text;

using EdcHost.SlaveServers;

using Xunit;

namespace EdcHost.Tests.IntegrationTests;
public partial class SlaveServersTests
{
    [Theory]
    [InlineData(new byte[] { 0x55, 0xAA, 0x02, 0x01, 0x00, 0x01, 0x01 })] //length
    [InlineData(new byte[] { 0x55, 0xAA, 0x02, 0x00, 0x01, 0x01 })] //length
    [InlineData(new byte[] { 0x55, 0xAA, 0x02, 0x00, 0x01, 0x01, 0x01, 0x01 })] //length
    [InlineData(new byte[] { 0x55, 0xAA, 0x02, 0x00, 0x01, 0x01, 0x01 })] //checksum
    [InlineData(new byte[] { 0x55, 0x02, 0x00, 0x00, 0x01, 0x01 })] //head
    [InlineData(new byte[] { 0xAA, 0x02, 0x00, 0x00, 0x01, 0x01 })] //head
    [InlineData(new byte[] { 0x53, 0xAA, 0x02, 0x00, 0x00, 0x01, 0x01 })] //head
    [InlineData(new byte[] { 0x55, 0xAB, 0x02, 0x00, 0x00, 0x01, 0x01 })] //head

    void Malformed(byte[] bytes)
    {
        // Assertion
        Assert.Throws<Exception>(() => new PacketFromSlave(bytes));
    }
}
